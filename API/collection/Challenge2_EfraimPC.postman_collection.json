{
	"info": {
		"_postman_id": "0555a4c4-5c36-43c2-85b9-035cb3cb69a6",
		"name": "Challenge2_EfraimPC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.- All Scenarios",
			"item": [
				{
					"name": "Payments",
					"item": [
						{
							"name": "Create Payments",
							"item": [
								{
									"name": "Create Payment (A) - Approved Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
													"\r",
													"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
													"\r",
													"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate amount is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
													"});\r",
													"\r",
													"pm.test(\"Validate currency is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate status is not COMPLETED\", function () {\r",
													"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
													"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
													"\r",
													"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
													"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Payment - Completed Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
													"\r",
													"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
													"\r",
													"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate status is not Approved\", function () {\r",
													"    pm.expect(jsonData.payment.status).to.not.eql(\"APPROVED\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate amount is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
													"});\r",
													"\r",
													"pm.test(\"Validate currency is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
													"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
													"\r",
													"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
													"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": true,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Payments",
							"item": [
								{
									"name": "Get specific Payment (B)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedPaymentId = pm.environment.get(\"paymentId\");\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate payment id matches the request \", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.payment.id).to.eql(expectedPaymentId);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											],
											"path": [
												"{{paymentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 1000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update a Payment",
							"item": [
								{
									"name": "Create Payment (A) - Approved Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
													"\r",
													"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
													"\r",
													"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate amount is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
													"});\r",
													"\r",
													"pm.test(\"Validate currency is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate status is not COMPLETED\", function () {\r",
													"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
													"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
													"\r",
													"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
													"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update a Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate amount is updated correctly\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(102);\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"payment\": {\r\n      \"amount_money\": {\r\n        \"amount\": 102,\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      },\r\n      \"cash_details\": {\r\n        \"buyer_supplied_money\": {\r\n          \"amount\": 102,\r\n          \"currency\": \"{{paymentCurrency}}\"\r\n        }\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											],
											"path": [
												"{{paymentId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Cancel Payment",
							"item": [
								{
									"name": "Create Payment (A) - Approved Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
													"\r",
													"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
													"\r",
													"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate amount is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
													"});\r",
													"\r",
													"pm.test(\"Validate currency is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate status is not COMPLETED\", function () {\r",
													"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
													"});\r",
													"\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
													"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
													"\r",
													"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
													"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cancel Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 1000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}/cancel",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											],
											"path": [
												"{{paymentId}}",
												"cancel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Complete Payment",
							"item": [
								{
									"name": "Create Payment (A) - Approved Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
													"\r",
													"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
													"\r",
													"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate amount is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
													"});\r",
													"\r",
													"pm.test(\"Validate currency is the same as requested\", function () {\r",
													"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate status is not COMPLETED\", function () {\r",
													"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
													"});\r",
													"\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"receipt_number\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"receipt_number\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
													"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
													"\r",
													"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
													"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 1000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
													"});\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"payment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"created_at\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"amount_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"status\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"source_type\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"location_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"order_id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"total_money\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currency\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"amount\",\r",
													"            \"currency\"\r",
													"          ]\r",
													"        },\r",
													"        \"capabilities\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": [\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          ]\r",
													"        },\r",
													"        \"cash_details\": {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"buyer_supplied_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            },\r",
													"            \"change_back_money\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"amount\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"currency\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"amount\",\r",
													"                \"currency\"\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"buyer_supplied_money\",\r",
													"            \"change_back_money\"\r",
													"          ]\r",
													"        },\r",
													"        \"version_token\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"id\",\r",
													"        \"created_at\",\r",
													"        \"amount_money\",\r",
													"        \"status\",\r",
													"        \"source_type\",\r",
													"        \"location_id\",\r",
													"        \"order_id\",\r",
													"        \"total_money\",\r",
													"        \"capabilities\",\r",
													"        \"cash_details\",\r",
													"        \"version_token\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"payment\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}/complete",
											"protocol": "https",
											"host": [
												"{{baseURL}}{{paymentsPath}}"
											],
											"path": [
												"{{paymentId}}",
												"complete"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Refunds",
			"item": [
				{
					"name": "Refund a Payment (G)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"refundId\", jsonData.refund.id);\r",
									"\r",
									"var responseRefundDate = jsonData.refund.created_at.substring(0,10);\r",
									"var expectedRefundDate = pm.environment.get(\"refundDate\");\r",
									"\r",
									"pm.test(\"Validate response 'created_at' field matches the date when the refund was made\", function () {\r",
									"    pm.expect(responseRefundDate).to.eql(expectedRefundDate);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"refund\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"status\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"amount_money\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"amount\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"currency\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"amount\",\r",
									"            \"currency\"\r",
									"          ]\r",
									"        },\r",
									"        \"payment_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"order_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"location_id\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"status\",\r",
									"        \"amount_money\",\r",
									"        \"payment_id\",\r",
									"        \"order_id\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"location_id\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"refund\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"//added 5 hours for server time difference vs local time\r",
									"pm.environment.set(\"refundDate\", moment().add(5, 'h').format(\"YYYY-MM-DD\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payment_id\": \"{{paymentId}}\",\r\n    \"amount_money\": {\r\n      \"amount\": 1,\r\n      \"currency\": \"MXN\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseURL}}{{refundsPath}}",
							"protocol": "https",
							"host": [
								"{{baseURL}}{{refundsPath}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get payment refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"refund\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"status\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"amount_money\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"amount\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"currency\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"amount\",\r",
									"            \"currency\"\r",
									"          ]\r",
									"        },\r",
									"        \"payment_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"order_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"location_id\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"status\",\r",
									"        \"amount_money\",\r",
									"        \"payment_id\",\r",
									"        \"order_id\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"location_id\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"refund\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseURL}}{{refundsPath}}/{{refundId}}",
							"protocol": "https",
							"host": [
								"{{baseURL}}{{refundsPath}}"
							],
							"path": [
								"{{refundId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lists all payment refunds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseURL}}{{refundsPath}}",
							"protocol": "https",
							"host": [
								"{{baseURL}}{{refundsPath}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2.- Validation scenarios",
			"item": [
				{
					"name": "A",
					"item": [
						{
							"name": "Create Payment (A) - Approved Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
											"\r",
											"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
											"\r",
											"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate amount is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
											"});\r",
											"\r",
											"pm.test(\"Validate currency is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate status is not COMPLETED\", function () {\r",
											"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
											"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
											"\r",
											"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
											"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "B",
					"item": [
						{
							"name": "Get specific Payment (B)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedPaymentId = pm.environment.get(\"paymentId\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate payment id matches the request \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.payment.id).to.eql(expectedPaymentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									],
									"path": [
										"{{paymentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "C",
					"item": [
						{
							"name": "Cash payment with partial auth (C)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate detail message\", function () {\r",
											"    pm.expect(jsonData.errors[0].detail).to.eql(\"Accept partial authorization not supported for source_id CASH of type CASH\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
											"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
											"\r",
											"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
											"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"accept_partial_authorization\": true,\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "D",
					"item": [
						{
							"name": "1D - Create Payment (A) - Approved Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
											"\r",
											"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
											"\r",
											"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate status is not COMPLETED\", function () {\r",
											"    pm.expect(jsonData.payment.status).to.not.eql(\"COMPLETED\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate currency is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
											"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
											"\r",
											"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
											"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": false,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2D - Update a Payment with Tip (D)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var paymentAmountWithTip = parseInt(pm.environment.get(\"paymentAmountWithTip\"));\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate Total money adds a tip to the amount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.payment.total_money.amount).to.eql(paymentAmountWithTip);\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var paymentAmountWithTip = parseInt(pm.environment.get(\"paymentAmount\"))+1;\r",
											"\r",
											"pm.environment.set(\"paymentAmountWithTip\", paymentAmountWithTip);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"payment\": {\r\n      \"amount_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      },\r\n      \"cash_details\": {\r\n        \"buyer_supplied_money\": {\r\n          \"amount\": {{paymentAmountWithTip}},\r\n          \"currency\": \"{{paymentCurrency}}\"\r\n        }\r\n      },\r\n      \"tip_money\": {\r\n      \"amount\": 1,\r\n      \"currency\": \"MXN\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}/{{paymentId}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									],
									"path": [
										"{{paymentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "E",
					"item": [
						{
							"name": "Try to cancel unexistent payment (E)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedDetailMessage = \"Could not find payment with id: \"+ pm.environment.get(\"NonExistentPaymentId\");\r",
											"\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate detail message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors[0].detail).to.eql(expectedDetailMessage);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}/{{NonExistentPaymentId}}/cancel",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									],
									"path": [
										"{{NonExistentPaymentId}}",
										"cancel"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "F",
					"item": [
						{
							"name": "1F - Create Payment - Completed Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
											"\r",
											"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
											"\r",
											"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate status is not Approved\", function () {\r",
											"    pm.expect(jsonData.payment.status).to.not.eql(parseInt(\"APPROVED\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validate amount is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
											"});\r",
											"\r",
											"pm.test(\"Validate currency is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
											"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
											"\r",
											"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
											"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": true,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2F - Refund a higher amount (F)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedErrorCode = \"AMOUNT_TOO_HIGH\";\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate refund 'Amount too high' error code\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors[0].code).to.eql(expectedErrorCode);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var paymentHigherAmount = parseInt(pm.environment.get(\"paymentAmount\"))+1;\r",
											"\r",
											"pm.environment.set(\"refundHigherAmount\", paymentHigherAmount);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payment_id\": \"{{paymentId}}\",\r\n    \"amount_money\": {\r\n      \"amount\": {{refundHigherAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{refundsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{refundsPath}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "G",
					"item": [
						{
							"name": "1G - Create Payment - Completed Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var expectedAmount = pm.environment.get(\"paymentAmount\");\r",
											"\r",
											"var expectedCurrency = pm.environment.get(\"paymentCurrency\");\r",
											"\r",
											"pm.environment.set(\"paymentId\", jsonData.payment.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate status is not Approved\", function () {\r",
											"    pm.expect(jsonData.payment.status).to.not.eql(\"APPROVED\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate amount is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.amount).to.eql(parseInt(expectedAmount));\r",
											"});\r",
											"\r",
											"pm.test(\"Validate currency is the same as requested\", function () {\r",
											"    pm.expect(jsonData.payment.amount_money.currency).to.eql(expectedCurrency);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"payment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"source_type\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"total_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"capabilities\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"cash_details\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"buyer_supplied_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            },\r",
											"            \"change_back_money\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"amount\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"currency\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"amount\",\r",
											"                \"currency\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"buyer_supplied_money\",\r",
											"            \"change_back_money\"\r",
											"          ]\r",
											"        },\r",
											"        \"receipt_number\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"version_token\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"created_at\",\r",
											"        \"amount_money\",\r",
											"        \"status\",\r",
											"        \"source_type\",\r",
											"        \"location_id\",\r",
											"        \"order_id\",\r",
											"        \"total_money\",\r",
											"        \"capabilities\",\r",
											"        \"cash_details\",\r",
											"        \"receipt_number\",\r",
											"        \"version_token\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"payment\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rndIdempotencyKey = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
											"pm.environment.set(\"idempotencyKey\", rndIdempotencyKey)\r",
											"\r",
											"var rndPaymentAmount = pm.variables.replaceIn('{{$randomInt}}')\r",
											"pm.environment.set(\"paymentAmount\", rndPaymentAmount)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": {{paymentAmount}},\r\n      \"currency\": \"{{paymentCurrency}}\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\",\r\n    \"autocomplete\": true,\r\n    \"source_id\": \"CASH\",\r\n    \"cash_details\": {\r\n      \"buyer_supplied_money\": {\r\n        \"amount\": {{paymentAmount}},\r\n        \"currency\": \"{{paymentCurrency}}\"\r\n      }\r\n    }\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{paymentsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{paymentsPath}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2G - Refund a Payment (G)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set(\"refundId\", jsonData.refund.id);\r",
											"\r",
											"var responseRefundDate = jsonData.refund.created_at.substring(0,10);\r",
											"var expectedRefundDate = pm.environment.get(\"refundDate\");\r",
											"\r",
											"pm.test(\"Validate response 'created_at' field matches the date when the refund was made\", function () {\r",
											"    pm.expect(responseRefundDate).to.eql(expectedRefundDate);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"refund\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"amount_money\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currency\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"amount\",\r",
											"            \"currency\"\r",
											"          ]\r",
											"        },\r",
											"        \"payment_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"order_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"created_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"updated_at\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"location_id\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"status\",\r",
											"        \"amount_money\",\r",
											"        \"payment_id\",\r",
											"        \"order_id\",\r",
											"        \"created_at\",\r",
											"        \"updated_at\",\r",
											"        \"location_id\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"refund\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"//added 5 hours for server time difference vs local time\r",
											"pm.environment.set(\"refundDate\", moment().add(5, 'h').format(\"YYYY-MM-DD\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payment_id\": \"{{paymentId}}\",\r\n    \"amount_money\": {\r\n      \"amount\": 1,\r\n      \"currency\": \"MXN\"\r\n    },\r\n    \"idempotency_key\": \"{{idempotencyKey}}\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseURL}}{{refundsPath}}",
									"protocol": "https",
									"host": [
										"{{baseURL}}{{refundsPath}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}